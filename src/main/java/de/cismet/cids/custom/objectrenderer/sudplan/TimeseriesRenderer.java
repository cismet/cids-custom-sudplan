/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.objectrenderer.sudplan;

import org.apache.log4j.Logger;

import java.awt.BorderLayout;

import java.net.MalformedURLException;

import de.cismet.cids.custom.sudplan.AbstractCidsBeanRenderer;
import de.cismet.cids.custom.sudplan.SMSUtils;
import de.cismet.cids.custom.sudplan.TimeseriesChartPanel;
import de.cismet.cids.custom.sudplan.converter.TimeseriesConverter;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class TimeseriesRenderer extends AbstractCidsBeanRenderer {

    //~ Static fields/initializers ---------------------------------------------

    private static final transient Logger LOG = Logger.getLogger(TimeseriesRenderer.class);

    //~ Instance fields --------------------------------------------------------

    private transient TimeseriesChartPanel panel;

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form TimeseriesRenderer.
     */
    public TimeseriesRenderer() {
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    @Override
    protected void init() {
        try {
            final String uri = (String)cidsBean.getProperty("uri"); // NOI18N
            final TimeseriesConverter converter = SMSUtils.loadConverter(cidsBean);
            panel = new TimeseriesChartPanel(uri, converter);
            add(panel, BorderLayout.CENTER);
        } catch (final MalformedURLException ex) {
            final String message = "cidsbean contains invalid uri"; // NOI18N
            LOG.error(message, ex);
            throw new IllegalStateException(message, ex);
        }
    }

    @Override
    public void dispose() {
        if (panel != null) {
            panel.dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        setOpaque(false);
        setLayout(new java.awt.BorderLayout());
    } // </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
