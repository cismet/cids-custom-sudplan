/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.objectrenderer.sudplan;

import Sirius.navigator.connection.SessionManager;
import Sirius.navigator.ui.ComponentRegistry;

import Sirius.server.middleware.types.MetaClass;

import org.openide.util.NbBundle;
import org.openide.util.WeakListeners;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import de.cismet.cids.custom.sudplan.Manager;
import de.cismet.cids.custom.sudplan.ManagerType;
import de.cismet.cids.custom.sudplan.SMSUtils;
import de.cismet.cids.custom.sudplan.SqlTimestampToStringConverter;

import de.cismet.cids.dynamics.CidsBean;

import de.cismet.cids.navigator.utils.ClassCacheMultiple;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class RunRenderer extends AbstractManagerRenderer {

    //~ Instance fields --------------------------------------------------------

    private final transient ActionListener openInputL;
    private final transient ActionListener openOutputL;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXHyperlink hypInput;
    private org.jdesktop.swingx.JXHyperlink hypOutput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jplManager;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblFinished;
    private javax.swing.JLabel lblFinishedValue;
    private javax.swing.JLabel lblInput;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JLabel lblStarted;
    private javax.swing.JLabel lblStartedValue;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form RunRenderer.
     */
    public RunRenderer() {
        openInputL = new OpenIOtActionListener("modelinput", SMSUtils.TABLENAME_MODELINPUT);    // NOI18N
        openOutputL = new OpenIOtActionListener("modeloutput", SMSUtils.TABLENAME_MODELOUTPUT); // NOI18N

        initComponents();

        hypInput.addActionListener(WeakListeners.create(ActionListener.class, openInputL, hypInput));
        hypOutput.addActionListener(WeakListeners.create(ActionListener.class, openOutputL, hypOutput));
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        jplManager = new javax.swing.JPanel();
        lblInput = new javax.swing.JLabel();
        lblOutput = new javax.swing.JLabel();
        hypInput = new org.jdesktop.swingx.JXHyperlink();
        hypOutput = new org.jdesktop.swingx.JXHyperlink();
        lblStarted = new javax.swing.JLabel();
        lblFinished = new javax.swing.JLabel();
        lblStartedValue = new javax.swing.JLabel();
        lblFinishedValue = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText(NbBundle.getMessage(RunRenderer.class, "RunRenderer.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 9, 4, 4);
        add(jLabel1, gridBagConstraints);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.name}"),
                lblName,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        binding.setSourceUnreadableValue("<error>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 215;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 9);
        add(lblName, gridBagConstraints);

        jLabel2.setText(NbBundle.getMessage(RunRenderer.class, "RunRenderer.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 9, 4, 4);
        add(jLabel2, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.description}"),
                lblDescription,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        binding.setSourceUnreadableValue("<error>");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 215;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 9);
        add(lblDescription, gridBagConstraints);

        jplManager.setOpaque(false);
        jplManager.setPreferredSize(new java.awt.Dimension(100, 100));
        jplManager.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 9, 4, 9);
        add(jplManager, gridBagConstraints);

        lblInput.setText(NbBundle.getMessage(RunRenderer.class, "RunRenderer.lblInput.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 9, 4, 4);
        add(lblInput, gridBagConstraints);

        lblOutput.setText(NbBundle.getMessage(RunRenderer.class, "RunRenderer.lblOutput.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 9, 4, 4);
        add(lblOutput, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.modelinput.name}"),
                hypInput,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 9);
        add(hypInput, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.modeloutput.name}"),
                hypOutput,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("");
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 9);
        add(hypOutput, gridBagConstraints);

        lblStarted.setText(NbBundle.getMessage(RunRenderer.class, "RunRenderer.lblStarted.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 9, 4, 4);
        add(lblStarted, gridBagConstraints);

        lblFinished.setText(NbBundle.getMessage(RunRenderer.class, "RunRenderer.lblFinished.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 9, 4, 4);
        add(lblFinished, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.started}"),
                lblStartedValue,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue(NbBundle.getMessage(
                RunRenderer.class,
                "RunRenderer.lblStartedValue.text.nullValue")); // NOI18N
        binding.setConverter(new SqlTimestampToStringConverter());
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 9);
        add(lblStartedValue, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.finished}"),
                lblFinishedValue,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue(NbBundle.getMessage(
                RunRenderer.class,
                "RunRenderer.lblFinishedValue.text.nullValue")); // NOI18N
        binding.setConverter(new SqlTimestampToStringConverter());
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 9);
        add(lblFinishedValue, gridBagConstraints);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents

    @Override
    public void setCidsBean(final CidsBean cidsBean) {
        super.setCidsBean(cidsBean);
        bindingGroup.unbind();
        bindingGroup.bind();
    }

    /**
     * DOCUMENT ME!
     *
     * @param  manager  DOCUMENT ME!
     */
    @Override
    protected void setManagerUI(final Manager manager) {
        jplManager.removeAll();
        jplManager.add(manager.getUI(), BorderLayout.CENTER);
        jplManager.revalidate();
    }

    @Override
    public void dispose() {
        super.dispose();
        bindingGroup.unbind();
    }

    @Override
    public String getTitle() {
        return "Model Execution Status of " + super.getTitle();
    }

    @Override
    protected ManagerType getType() {
        return ManagerType.MODEL;
    }

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class OpenIOtActionListener implements ActionListener {

        //~ Instance fields ----------------------------------------------------

        private final transient String propertyName;
        private final transient String tableName;

        //~ Constructors -------------------------------------------------------

        /**
         * Creates a new OpenIOtActionListener object.
         *
         * @param  propertyName  DOCUMENT ME!
         * @param  tableName     DOCUMENT ME!
         */
        public OpenIOtActionListener(final String propertyName, final String tableName) {
            this.propertyName = propertyName;
            this.tableName = tableName;
        }

        //~ Methods ------------------------------------------------------------

        @Override
        public void actionPerformed(final ActionEvent e) {
            final Object input = cidsBean.getProperty(propertyName);
            if (input != null) {
                final MetaClass metaclass = ClassCacheMultiple.getMetaClass(
                        SessionManager.getSession().getUser().getDomain(),
                        tableName);

                assert metaclass != null : "Timeseries metaclass not present"; // NOI18N

                ComponentRegistry.getRegistry()
                        .getDescriptionPane()
                        .gotoMetaObject(metaclass, ((CidsBean)input).getMetaObject().getID(), ""); // NOI18N
            }
        }
    }
}
