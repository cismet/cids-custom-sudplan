/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.sudplan;

import java.awt.event.ActionListener;

import java.util.Iterator;
import java.util.Vector;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 * DOCUMENT ME!
 *
 * @author   jlauter
 * @version  $Revision$, $Date$
 */
public class DeltaSurfacePrepareDialog extends javax.swing.JDialog {

    //~ Instance fields --------------------------------------------------------

    private Vector listeners = new Vector();
    private ChangeEvent ce = new ChangeEvent(this);

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel lblState;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form DeltaSurfacePrepareDialog.
     *
     * @param  parent    DOCUMENT ME!
     * @param  modal     DOCUMENT ME!
     * @param  maxValue  DOCUMENT ME!
     */
    public DeltaSurfacePrepareDialog(final java.awt.Frame parent, final boolean modal, final int maxValue) {
        super(parent, modal);
        initComponents();
        progressBar.setMaximum(maxValue);
        progressBar.setStringPainted(true);
        setAlwaysOnTop(true);
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @param  state  DOCUMENT ME!
     */
    public void setProgressValue(final int state) {
        progressBar.setValue(state);
//        progressBar.validate();
    }

    /**
     * DOCUMENT ME!
     *
     * @param  text  DOCUMENT ME!
     */
    public void setProgressText(final String text) {
        progressBar.setString(text);
//        progressBar.validate();
//        progressBar.repaint();
//        progressBar.revalidate();
    }

    /**
     * DOCUMENT ME!
     *
     * @param  al  DOCUMENT ME!
     */
    public void addCancelButtonActionListener(final ActionListener al) {
        btnCancel.addActionListener(al);
    }

    /**
     * DOCUMENT ME!
     *
     * @param  al  DOCUMENT ME!
     */
    public void removeCancelButtonActionListener(final ActionListener al) {
        btnCancel.removeActionListener(al);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        lblState = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblState.setText(org.openide.util.NbBundle.getMessage(
                DeltaSurfacePrepareDialog.class,
                "DeltaSurfacePrepareDialog.lblState.text")); // NOI18N

        progressBar.setMaximumSize(new java.awt.Dimension(32767, 10));
        progressBar.setMinimumSize(new java.awt.Dimension(10, 10));
        progressBar.setPreferredSize(new java.awt.Dimension(300, 10));

        btnCancel.setText(org.openide.util.NbBundle.getMessage(
                DeltaSurfacePrepareDialog.class,
                "DeltaSurfacePrepareDialog.btnCancel.text")); // NOI18N
        btnCancel.setPreferredSize(new java.awt.Dimension(55, 20));

        final javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                layout.createSequentialGroup().addContainerGap().addGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                        layout.createSequentialGroup().addComponent(
                            progressBar,
                            javax.swing.GroupLayout.PREFERRED_SIZE,
                            340,
                            javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(
                            javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(
                            btnCancel,
                            javax.swing.GroupLayout.DEFAULT_SIZE,
                            99,
                            Short.MAX_VALUE)).addGroup(
                        layout.createSequentialGroup().addComponent(
                            lblState,
                            javax.swing.GroupLayout.PREFERRED_SIZE,
                            395,
                            javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 0, Short.MAX_VALUE)))));
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                layout.createSequentialGroup().addGap(6, 6, 6).addComponent(lblState).addPreferredGap(
                    javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
                        progressBar,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        29,
                        javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(
                        btnCancel,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        29,
                        javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(
                    javax.swing.GroupLayout.DEFAULT_SIZE,
                    Short.MAX_VALUE)));

        pack();
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  args  the command line arguments
     */
    public static void main(final String[] args) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (final javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeltaSurfacePrepareDialog.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeltaSurfacePrepareDialog.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeltaSurfacePrepareDialog.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeltaSurfacePrepareDialog.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

                @Override
                public void run() {
                    final DeltaSurfacePrepareDialog dialog = new DeltaSurfacePrepareDialog(
                            new javax.swing.JFrame(),
                            true,
                            3);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                            @Override
                            public void windowClosing(final java.awt.event.WindowEvent e) {
                                System.exit(0);
                            }
                        });
                    dialog.setVisible(true);
                }
            });
    }

    /**
     * DOCUMENT ME!
     *
     * @param  listener  DOCUMENT ME!
     */
    public void addChangeListener(final ChangeListener listener) {
        listeners.add(listener);
    }

    /**
     * DOCUMENT ME!
     *
     * @param  listener  DOCUMENT ME!
     */
    public void removeChangeListener(final ChangeListener listener) {
        listeners.remove(listener);
    }

    /**
     * DOCUMENT ME!
     */
    private void fireChangeEvent() {
        final Iterator iter = listeners.iterator();
        while (iter.hasNext()) {
            ((ChangeListener)iter.next()).stateChanged(ce);
        }
    }
}
