/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.sudplan.airquality;

import org.openide.util.NbBundle;
import org.openide.util.WeakListeners;

import java.awt.EventQueue;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public final class AirqualityDownscalingVisualPanelMetadata extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private final transient AirqualityDownscalingWizardPanelMetadata model;
    private final transient DocumentListener changeModelNameListener;
    private final transient DocumentListener changeModelDescriptionListener;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final transient javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
    private final transient javax.swing.JLabel lblDescription = new javax.swing.JLabel();
    private final transient javax.swing.JLabel lblName = new javax.swing.JLabel();
    private final transient javax.swing.JTextArea txaDescription = new javax.swing.JTextArea();
    private final transient javax.swing.JTextField txtName = new javax.swing.JTextField();
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form AirqualityDownscalingVisualPanelTargetDate.
     *
     * @param  model  DOCUMENT ME!
     */
    public AirqualityDownscalingVisualPanelMetadata(final AirqualityDownscalingWizardPanelMetadata model) {
        this.model = model;
        changeModelNameListener = new ChangeModelListener(true);
        changeModelDescriptionListener = new ChangeModelListener(false);

        // name of the wizard step
        this.setName(NbBundle.getMessage(
                AirqualityDownscalingVisualPanelMetadata.class,
                "AirqualityDownscalingVisualPanelMetadata.this.name")); // NOI18N

        initComponents();

        txtName.getDocument()
                .addDocumentListener(WeakListeners.document(changeModelNameListener, txtName.getDocument()));
        txaDescription.getDocument()
                .addDocumentListener(WeakListeners.document(
                        changeModelDescriptionListener,
                        txaDescription.getDocument()));
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     */
    void init() {
        if (model.getName() == null) {
            txtName.setText(NbBundle.getMessage(
                    AirqualityDownscalingVisualPanelMetadata.class,
                    "AirqualityDownscalingVisualPanelMetadata.txtName.text")); // NOI18N
        } else {
            txtName.setText(model.getName());
        }

        txtName.selectAll();

        // FIXME: ATR hack to pre-populate the meta information
        if (model.getDescription() == null) {
            txaDescription.setText("This is a demo run to demonstrate airquality downscaling."); // NOI18N
        } else {
            txaDescription.setText(model.getDescription());
        }

        EventQueue.invokeLater(new Runnable() {

                @Override
                public void run() {
                    txtName.requestFocus();
                }
            });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        lblName.setLabelFor(txtName);
        lblName.setText(NbBundle.getMessage(
                AirqualityDownscalingVisualPanelMetadata.class,
                "AirqualityDownscalingVisualPanelMetadata.lblName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblName, gridBagConstraints);

        txtName.setText(NbBundle.getMessage(
                AirqualityDownscalingVisualPanelMetadata.class,
                "AirqualityDownscalingVisualPanelMetadata.txtName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtName, gridBagConstraints);

        lblDescription.setLabelFor(txaDescription);
        lblDescription.setText(NbBundle.getMessage(
                AirqualityDownscalingVisualPanelMetadata.class,
                "AirqualityDownscalingVisualPanelMetadata.lblDescription.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(lblDescription, gridBagConstraints);

        txaDescription.setColumns(20);
        txaDescription.setRows(5);
        jScrollPane1.setViewportView(txaDescription);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jScrollPane1, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class ChangeModelListener implements DocumentListener {

        //~ Instance fields ----------------------------------------------------

        private final boolean name;

        //~ Constructors -------------------------------------------------------

        /**
         * Creates a new ChangeModelListener object.
         *
         * @param  name  DOCUMENT ME!
         */
        public ChangeModelListener(final boolean name) {
            this.name = name;
        }

        //~ Methods ------------------------------------------------------------

        @Override
        public void insertUpdate(final DocumentEvent e) {
            updateModel();
        }

        @Override
        public void removeUpdate(final DocumentEvent e) {
            updateModel();
        }

        @Override
        public void changedUpdate(final DocumentEvent e) {
            updateModel();
        }

        /**
         * DOCUMENT ME!
         */
        private void updateModel() {
            if (name) {
                model.setName(txtName.getText());
            } else {
                model.setDescription(txaDescription.getText());
            }
        }
    }
}
