/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.sudplan.airquality;

import org.apache.log4j.Logger;

import org.openide.util.NbBundle;
import org.openide.util.WeakListeners;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import java.util.Date;
import java.util.GregorianCalendar;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public final class AirqualityDownscalingVisualPanelDate extends javax.swing.JPanel {

    //~ Static fields/initializers ---------------------------------------------

    private static final transient Logger LOG = Logger.getLogger(AirqualityDownscalingVisualPanelDate.class);

    //~ Instance fields --------------------------------------------------------

    private final transient AirqualityDownscalingWizardPanelDate model;
    private final transient PropertyChangeListener changeModelStartListener;
    private final transient PropertyChangeListener changeModelEndListener;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler gluFillerHorizontal;
    private javax.swing.Box.Filler gluFillerVertical;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblStartDate;
    private org.jdesktop.swingx.JXDatePicker xdpEndDate;
    private org.jdesktop.swingx.JXDatePicker xdpStartDate;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form AirqualityDownscalingVisualPanelScenarios.
     *
     * @param  model  DOCUMENT ME!
     */
    public AirqualityDownscalingVisualPanelDate(final AirqualityDownscalingWizardPanelDate model) {
        this.model = model;
        changeModelStartListener = new ChangeModelListener(true);
        changeModelEndListener = new ChangeModelListener(false);

        // name of the wizard step
        this.setName(NbBundle.getMessage(
                AirqualityDownscalingVisualPanelDate.class,
                "AirqualityDownscalingVisualPanelDate.this.name")); // NOI18N

        initComponents();

        xdpStartDate.addPropertyChangeListener(WeakListeners.propertyChange(changeModelStartListener, xdpStartDate));
        xdpEndDate.addPropertyChangeListener(WeakListeners.propertyChange(changeModelEndListener, xdpEndDate));
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     */
    void init() {
        final Date startDate = model.getStartDate();
        final Date endDate = model.getEndDate();

        if ((startDate == null) || (endDate == null)) {
            // FIXME: ATR hack to pre-populate fields
            // final Date now = new GregorianCalendar().getTime();
            final Date start = new GregorianCalendar(1965, 0, 1, 0, 0, 0).getTime();
            final Date end = new GregorianCalendar(2095, 11, 31, 23, 59, 59).getTime();

            xdpStartDate.setDate(start);
            xdpEndDate.setDate(end);

            model.setStartDate(start);
            model.setEndDate(end);
        } else {
            xdpStartDate.setDate(startDate);
            xdpEndDate.setDate(endDate);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblStartDate = new javax.swing.JLabel();
        lblEndDate = new javax.swing.JLabel();
        xdpStartDate = new org.jdesktop.swingx.JXDatePicker();
        xdpEndDate = new org.jdesktop.swingx.JXDatePicker();
        gluFillerVertical = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 32767));
        gluFillerHorizontal = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0),
                new java.awt.Dimension(0, 0),
                new java.awt.Dimension(32767, 0));

        setMinimumSize(new java.awt.Dimension(200, 150));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(450, 300));
        setLayout(new java.awt.GridBagLayout());

        lblStartDate.setText(NbBundle.getMessage(
                AirqualityDownscalingVisualPanelDate.class,
                "AirqualityDownscalingVisualPanelDate.lblStartDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblStartDate, gridBagConstraints);

        lblEndDate.setText(NbBundle.getMessage(
                AirqualityDownscalingVisualPanelDate.class,
                "AirqualityDownscalingVisualPanelDate.lblEndDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblEndDate, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(xdpStartDate, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(xdpEndDate, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.1;
        add(gluFillerVertical, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        add(gluFillerHorizontal, gridBagConstraints);
    }                                                                     // </editor-fold>//GEN-END:initComponents

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class ChangeModelListener implements PropertyChangeListener {

        //~ Instance fields ----------------------------------------------------

        private final boolean startDate;

        //~ Constructors -------------------------------------------------------

        /**
         * Creates a new NotifyModelListener object.
         *
         * @param  startDate  DOCUMENT ME!
         */
        public ChangeModelListener(final boolean startDate) {
            this.startDate = startDate;
        }

        //~ Methods ------------------------------------------------------------

        @Override
        public void propertyChange(final PropertyChangeEvent evt) {
            if (startDate) {
                model.setStartDate(xdpStartDate.getDate());
            } else {
                model.setEndDate(xdpEndDate.getDate());
            }
        }
    }
}
