/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.sudplan.airquality;

import Sirius.navigator.ui.ComponentRegistry;

import Sirius.server.middleware.types.MetaClass;

import org.openide.util.NbBundle;
import org.openide.util.WeakListeners;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import de.cismet.cids.navigator.utils.ClassCacheMultiple;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class AirqualityDownscalingInputManagerUI extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private final transient ActionListener openTsL;

    private final transient AirqualityDownscalingInput model;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final transient org.jdesktop.swingx.JXHyperlink hypTimeseries = new org.jdesktop.swingx.JXHyperlink();
    private final transient javax.swing.JLabel lblCreated = new javax.swing.JLabel();
    private final transient javax.swing.JLabel lblCreatedBy = new javax.swing.JLabel();
    private final transient javax.swing.JLabel lblCreatedByValue = new javax.swing.JLabel();
    private final transient javax.swing.JLabel lblCreatedValue = new javax.swing.JLabel();
    private final transient javax.swing.JLabel lblName = new javax.swing.JLabel();
    private final transient javax.swing.JLabel lblNameValue = new javax.swing.JLabel();
    private final transient javax.swing.JLabel lblScenario = new javax.swing.JLabel();
    private final transient javax.swing.JLabel lblScenarioValue = new javax.swing.JLabel();
    private final transient javax.swing.JLabel lblTargetYear = new javax.swing.JLabel();
    private final transient javax.swing.JLabel lblTargetYearValue = new javax.swing.JLabel();
    private final transient javax.swing.JLabel lblTimeseries = new javax.swing.JLabel();
    private final transient javax.swing.JPanel pnlFiller = new javax.swing.JPanel();
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form AirqualityDownscalingInputManagerUI.
     *
     * @param  model  DOCUMENT ME!
     */
    public AirqualityDownscalingInputManagerUI(final AirqualityDownscalingInput model) {
        this.openTsL = new OpenTimeseriesActionListener();
        this.model = model;

        initComponents();

        init();

        hypTimeseries.addActionListener(WeakListeners.create(ActionListener.class, openTsL, hypTimeseries));
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     */
    private void init() {
        lblNameValue.setText(model.getName());
        lblCreatedValue.setText(model.getCreated().toString());
        lblCreatedByValue.setText(model.getCreatedBy());
        lblScenarioValue.setText(model.getScenario());
        lblTargetYearValue.setText(model.getTargetYear().toString());
        hypTimeseries.setText(model.getTimeseriesName());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        lblName.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.lblName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(lblName, gridBagConstraints);

        lblCreated.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.lblCreated.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(lblCreated, gridBagConstraints);

        lblCreatedValue.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.lblCreatedValue.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(lblCreatedValue, gridBagConstraints);

        lblNameValue.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.lblNameValue.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(lblNameValue, gridBagConstraints);

        lblCreatedBy.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.lblCreatedBy.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(lblCreatedBy, gridBagConstraints);

        lblCreatedByValue.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.lblCreatedByValue.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(lblCreatedByValue, gridBagConstraints);

        lblScenario.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.lblScenario.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(lblScenario, gridBagConstraints);

        lblScenarioValue.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.lblScenarioValue.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(lblScenarioValue, gridBagConstraints);

        lblTargetYear.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.lblTargetYear.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(lblTargetYear, gridBagConstraints);

        lblTargetYearValue.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.lblTargetYearValue.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(lblTargetYearValue, gridBagConstraints);

        lblTimeseries.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.lblTimeseries.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(lblTimeseries, gridBagConstraints);

        pnlFiller.setOpaque(false);

        final org.jdesktop.layout.GroupLayout pnlFillerLayout = new org.jdesktop.layout.GroupLayout(pnlFiller);
        pnlFiller.setLayout(pnlFillerLayout);
        pnlFillerLayout.setHorizontalGroup(
            pnlFillerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 100, Short.MAX_VALUE));
        pnlFillerLayout.setVerticalGroup(
            pnlFillerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 100, Short.MAX_VALUE));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weighty = 1.0;
        add(pnlFiller, gridBagConstraints);

        hypTimeseries.setText(NbBundle.getMessage(
                AirqualityDownscalingInputManagerUI.class,
                "AirqualityDownscalingInputManagerUI.hypTimeseries.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        add(hypTimeseries, gridBagConstraints);
    }                                                                       // </editor-fold>//GEN-END:initComponents

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class OpenTimeseriesActionListener implements ActionListener {

        //~ Methods ------------------------------------------------------------

        @Override
        public void actionPerformed(final ActionEvent e) {
            final MetaClass metaclass = ClassCacheMultiple.getMetaClass("SUDPLAN", "Timeseries"); // NOI18N

            assert metaclass != null : "Timeseries metaclass not present"; // NOI18N

            ComponentRegistry.getRegistry().getDescriptionPane().gotoMetaObject(metaclass, model.getTimeseriesId(), ""); // NOI18N
        }
    }
}
