/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.sudplan.dataImport;

import org.openide.util.NbBundle;
import org.openide.util.WeakListeners;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class IDFImportVisualPanelChooseFile extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private final transient IDFImportWizardPanelChooseFile model;
    private final transient ActionListener actionL;
    private final transient DocumentListener docL;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final transient javax.swing.JButton btnSearch = new javax.swing.JButton();
    private final transient javax.swing.JLabel lblIdf = new javax.swing.JLabel();
    private final transient javax.swing.JTextField txtIdf = new javax.swing.JTextField();
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form IDFImportVisualPanelChooseFile.
     *
     * @param  model  DOCUMENT ME!
     */
    public IDFImportVisualPanelChooseFile(final IDFImportWizardPanelChooseFile model) {
        this.model = model;
        this.actionL = new ActionL();
        this.docL = new DocL();

        initComponents();

        btnSearch.addActionListener(WeakListeners.create(ActionListener.class, actionL, btnSearch));
        txtIdf.getDocument().addDocumentListener(WeakListeners.document(docL, txtIdf));
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     */
    void init() {
        if (model.getInputFile() == null) {
            txtIdf.setText(null);
        } else {
            txtIdf.setText(model.getInputFile().getAbsolutePath());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        lblIdf.setText(NbBundle.getMessage(
                IDFImportVisualPanelChooseFile.class,
                "IDFImportVisualPanelChooseFile.lblIdf.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblIdf, gridBagConstraints);

        txtIdf.setText(NbBundle.getMessage(
                IDFImportVisualPanelChooseFile.class,
                "IDFImportVisualPanelChooseFile.txtIdf.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtIdf, gridBagConstraints);

        btnSearch.setText(NbBundle.getMessage(
                IDFImportVisualPanelChooseFile.class,
                "IDFImportVisualPanelChooseFile.btnSearch.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(btnSearch, gridBagConstraints);
    }                                                              // </editor-fold>//GEN-END:initComponents

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class DocL implements DocumentListener {

        //~ Methods ------------------------------------------------------------

        @Override
        public void insertUpdate(final DocumentEvent e) {
            changedUpdate(e);
        }

        @Override
        public void removeUpdate(final DocumentEvent e) {
            changedUpdate(e);
        }

        @Override
        public void changedUpdate(final DocumentEvent e) {
            model.setInputFile(new File(txtIdf.getText()));
        }
    }

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class ActionL implements ActionListener {

        //~ Methods ------------------------------------------------------------

        @Override
        public void actionPerformed(final ActionEvent e) {
            final JFileChooser jfc = new JFileChooser();
            jfc.setSelectedFile(new File(txtIdf.getText()));
            final int answer = jfc.showOpenDialog(IDFImportVisualPanelChooseFile.this);
            if (JFileChooser.APPROVE_OPTION == answer) {
                txtIdf.setText(jfc.getSelectedFile().getAbsolutePath());
            }
        }
    }
}
