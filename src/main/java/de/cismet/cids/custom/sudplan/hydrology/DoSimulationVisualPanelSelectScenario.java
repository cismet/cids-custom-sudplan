/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.sudplan.hydrology;

import org.jdesktop.swingx.decorator.SortOrder;

import org.openide.util.NbBundle;

import se.smhi.sudplan.client.Scenario;

import java.awt.Component;

import java.util.Comparator;

import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class DoSimulationVisualPanelSelectScenario extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private final transient DoSimulationWizardPanelSelectScenario model;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final transient javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
    private final transient org.jdesktop.swingx.JXList lstScenarios = new org.jdesktop.swingx.JXList();
    private final transient javax.swing.JPanel pnlScenarios = new javax.swing.JPanel();
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form DoSimulationVisualPanelSelectScenario.
     *
     * @param  model  DOCUMENT ME!
     */
    public DoSimulationVisualPanelSelectScenario(final DoSimulationWizardPanelSelectScenario model) {
        this.model = model;

        initComponents();

        initList();
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     */
    private void initList() {
        lstScenarios.setCellRenderer(new DefaultListCellRenderer() {

                @Override
                public Component getListCellRendererComponent(final JList list,
                        final Object value,
                        final int index,
                        final boolean isSelected,
                        final boolean cellHasFocus) {
                    final Component c = super.getListCellRendererComponent(
                            list,
                            value,
                            index,
                            isSelected,
                            cellHasFocus);

                    if (c instanceof JLabel) {
                        final JLabel label = (JLabel)c;
                        final Scenario s = (Scenario)value;

                        label.setText(s.getScenarioId());
                    }

                    return c;
                }
            });

        lstScenarios.setComparator(new Comparator<Scenario>() {

                @Override
                public int compare(final Scenario o1, final Scenario o2) {
                    return o1.getScenarioId().compareTo(o2.getScenarioId());
                }
            });
    }

    /**
     * DOCUMENT ME!
     */
    void init() {
        if (model.getSelectedScenario() != null) {
            lstScenarios.setSelectedValue(model.getSelectedScenario(), true);
        }

        lstScenarios.setSortOrder(SortOrder.ASCENDING);
    }

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    public DoSimulationWizardPanelSelectScenario getModel() {
        return model;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        setName(NbBundle.getMessage(
                DoSimulationVisualPanelSelectScenario.class,
                "DoSimulationVisualPanelSelectScenario.name")); // NOI18N
        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        pnlScenarios.setBorder(javax.swing.BorderFactory.createTitledBorder(
                NbBundle.getMessage(
                    DoSimulationVisualPanelSelectScenario.class,
                    "DoSimulationVisualPanelSelectScenario.pnlScenarios.border.title"))); // NOI18N
        pnlScenarios.setOpaque(false);
        pnlScenarios.setLayout(new java.awt.GridBagLayout());

        lstScenarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        final org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create(
                "${model.availableScenarios}");
        final org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings
                    .createJListBinding(
                        org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                        this,
                        eLProperty,
                        lstScenarios);
        bindingGroup.addBinding(jListBinding);
        final org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${model.selectedScenario}"),
                lstScenarios,
                org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(lstScenarios);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        pnlScenarios.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        add(pnlScenarios, gridBagConstraints);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents
}
