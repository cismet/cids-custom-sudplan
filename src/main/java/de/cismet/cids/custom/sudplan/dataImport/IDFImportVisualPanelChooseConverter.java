/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.sudplan.dataImport;

import org.openide.util.WeakListeners;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import de.cismet.cids.custom.sudplan.converter.Converter;
import de.cismet.cids.custom.sudplan.converter.LinzIDFConverter;
import de.cismet.cids.custom.sudplan.converter.WuppertalIDFConverter;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class IDFImportVisualPanelChooseConverter extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private final transient IDFImportWizardPanelChooseConverter model;
    private final transient ItemListener itemL;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final transient javax.swing.JComboBox cboConverter = new javax.swing.JComboBox();
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form IDFImportVisualPanelChooseConverter.
     *
     * @param  model  DOCUMENT ME!
     */
    public IDFImportVisualPanelChooseConverter(final IDFImportWizardPanelChooseConverter model) {
        this.model = model;

        initComponents();

        addConverters();

        itemL = new ItemL();
        cboConverter.addItemListener(WeakListeners.create(ItemListener.class, itemL, cboConverter));
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     */
    private void addConverters() {
        // TODO: dynamic add (lookup)
        cboConverter.addItem(new LinzIDFConverter());
        cboConverter.addItem(new WuppertalIDFConverter());
    }

    /**
     * DOCUMENT ME!
     */
    void init() {
        if (model.getConverter() == null) {
            cboConverter.setSelectedIndex(0);
        } else {
            cboConverter.setSelectedItem(model.getConverter());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        final java.awt.GridBagConstraints gridBagConstraints;

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        add(cboConverter, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class ItemL implements ItemListener {

        //~ Methods ------------------------------------------------------------

        @Override
        public void itemStateChanged(final ItemEvent e) {
            if (ItemEvent.SELECTED == e.getStateChange()) {
                model.setConverter((Converter)e.getItem());
            }
        }
    }
}
