/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.sudplan.cismap3d;

import org.apache.log4j.Logger;

import org.openide.util.Lookup;
import org.openide.util.NbBundle;
import org.openide.util.lookup.ServiceProvider;

import java.awt.BorderLayout;
import java.awt.dnd.DropTarget;

import javax.swing.Icon;
import javax.swing.JComponent;

import de.cismet.cids.custom.sudplan.SMSUtils;

import de.cismet.cismap.navigatorplugin.CismapPlugin;

import de.cismet.tools.gui.BasicGuiComponentProvider;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
@ServiceProvider(service = BasicGuiComponentProvider.class)
public class Cismap3DLayer extends javax.swing.JPanel implements BasicGuiComponentProvider {

    //~ Static fields/initializers ---------------------------------------------

    public static final String CISMAP_3D_PANEL_ID = "cismet_3d_layer"; // NOI18N

    /** LOGGER. */
    private static final transient Logger LOG = Logger.getLogger(Cismap3DLayer.class);

    //~ Instance fields --------------------------------------------------------

    private final transient Icon icon;
    private final transient DropTarget dropTarget;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final transient javax.swing.JLabel lblNo3D = new javax.swing.JLabel();
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form Cismap3DLayer.
     *
     * @throws  IllegalStateException  DOCUMENT ME!
     */
    public Cismap3DLayer() {
        this.icon = SMSUtils.loadImageIcon(getClass(), "layers3d_16.png"); // NOI18N

        initComponents();

        final Layer3D layer3D = Lookup.getDefault().lookup(Layer3D.class);
        if (layer3D == null) {
            if (LOG.isInfoEnabled()) {
                LOG.info("no layer 3d implementation available"); // NOI18N
            }

            dropTarget = null;
        } else {
            final Canvas3D canvas3D = Lookup.getDefault().lookup(Canvas3D.class);

            if (canvas3D == null) {
                throw new IllegalStateException("layer 3D without canvas 3D illegal"); // NOI18N
            }

            removeAll();
            add(layer3D.getUI(), BorderLayout.CENTER);

            if (layer3D instanceof DropTarget3D) {
                dropTarget = new DropTarget(this, (DropTarget3D)layer3D);
            } else {
                if (LOG.isInfoEnabled()) {
                    LOG.info("drop target 3d not available for layer 3d, ignoring drop events"); // NOI18N
                }

                dropTarget = null;
            }
        }
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        setName(NbBundle.getMessage(Cismap3DLayer.class, "Cismap3DLayer.name")); // NOI18N
        setOpaque(false);
        setLayout(new java.awt.BorderLayout());

        lblNo3D.setFont(new java.awt.Font("Lucida Grande", 1, 48));                              // NOI18N
        lblNo3D.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNo3D.setText(NbBundle.getMessage(Cismap3DLayer.class, "Cismap3DLayer.lblNo3D.text")); // NOI18N
        add(lblNo3D, java.awt.BorderLayout.CENTER);
    }                                                                                            // </editor-fold>//GEN-END:initComponents

    @Override
    public String getId() {
        return CISMAP_3D_PANEL_ID;
    }

    @Override
    public String getDescription() {
        return "Cismap 3D Visualisation Panel";
    }

    @Override
    public Icon getIcon() {
        return icon;
    }

    @Override
    public JComponent getComponent() {
        return this;
    }

    @Override
    public GuiType getType() {
        return GuiType.GUICOMPONENT;
    }

    @Override
    public Object getPositionHint() {
        return CismapPlugin.ViewSection.LAYER;
    }

    @Override
    public void setLinkObject(final Object link) {
        // what's this good for
    }
}
