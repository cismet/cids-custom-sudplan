/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.sudplan.hydrology;

import Sirius.navigator.connection.SessionManager;
import Sirius.navigator.exception.ConnectionException;

import Sirius.server.middleware.types.MetaClass;
import Sirius.server.middleware.types.MetaObject;
import Sirius.server.newuser.User;

import org.apache.log4j.Logger;

import org.jdesktop.swingx.decorator.SortOrder;

import org.openide.util.NbBundle;

import java.text.MessageFormat;

import javax.swing.DefaultListModel;

import de.cismet.cids.custom.sudplan.NamedCidsBeanComparator;
import de.cismet.cids.custom.sudplan.NamedCidsBeanListCellRenderer;

import de.cismet.cids.navigator.utils.ClassCacheMultiple;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class AssignTimeseriesVisualPanelSelectTS extends javax.swing.JPanel {

    //~ Static fields/initializers ---------------------------------------------

    private static final String TIMESERIES_MO_QUERY = "SELECT {0}, {1} FROM timeseries"; // NOI18N

    /** LOGGER. */
    private static final transient Logger LOG = Logger.getLogger(AssignTimeseriesVisualPanelSelectTS.class);

    //~ Instance fields --------------------------------------------------------

    private final transient AssignTimeseriesWizardPanelSelectTS model;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final transient javax.swing.JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
    private final transient org.jdesktop.swingx.JXList lstTimeseries = new org.jdesktop.swingx.JXList();
    private final transient javax.swing.JPanel pnlTimeseries = new javax.swing.JPanel();
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form AssignTimeseriesVisualPanelSelectTS.
     *
     * @param  model  DOCUMENT ME!
     */
    public AssignTimeseriesVisualPanelSelectTS(final AssignTimeseriesWizardPanelSelectTS model) {
        this.model = model;
        this.setName("Select Timeseries");

        initComponents();

        listInit();
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    public AssignTimeseriesWizardPanelSelectTS getModel() {
        return model;
    }

    /**
     * DOCUMENT ME!
     */
    private void listInit() {
        lstTimeseries.setComparator(new NamedCidsBeanComparator());
        lstTimeseries.setCellRenderer(new NamedCidsBeanListCellRenderer());
    }

    /**
     * DOCUMENT ME!
     */
    void init() {
        final DefaultListModel listModel = new DefaultListModel();
        lstTimeseries.setModel(listModel);

        final User user = SessionManager.getSession().getUser();
        try {
            final MetaClass mc = ClassCacheMultiple.getMetaClass(user.getDomain(), "timeseries"); // NOI18N
            final String query = MessageFormat.format(TIMESERIES_MO_QUERY, mc.getID(), mc.getPrimaryKey());
            final MetaObject[] mos = SessionManager.getProxy().getMetaObjectByQuery(user, query);

            for (final MetaObject mo : mos) {
                listModel.addElement(mo.getBean());
            }

            lstTimeseries.setSortOrder(SortOrder.ASCENDING);

            if (model.getSelectedTimeseries() != null) {
                lstTimeseries.setSelectedValue(model.getSelectedTimeseries(), true);
            }
        } catch (final ConnectionException ex) {
            LOG.error("cannot fetch timeseries meta objects", ex); // NOI18N
            listModel.addElement("Error while searching for timeseries: " + ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        pnlTimeseries.setBorder(javax.swing.BorderFactory.createTitledBorder(
                NbBundle.getMessage(
                    AssignTimeseriesVisualPanelSelectTS.class,
                    "AssignTimeseriesVisualPanelSelectTS.pnlTimeseries.border.title"))); // NOI18N
        pnlTimeseries.setOpaque(false);
        pnlTimeseries.setLayout(new java.awt.GridBagLayout());

        lstTimeseries.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        final org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${model.selectedTimeseries}"),
                lstTimeseries,
                org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(lstTimeseries);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        pnlTimeseries.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        add(pnlTimeseries, gridBagConstraints);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents
}
