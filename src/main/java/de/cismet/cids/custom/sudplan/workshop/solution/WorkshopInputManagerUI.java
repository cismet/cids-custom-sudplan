/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.sudplan.workshop.solution;

import org.apache.log4j.Logger;

import org.openide.util.NbBundle;

import javax.swing.JOptionPane;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class WorkshopInputManagerUI extends javax.swing.JPanel {

    //~ Static fields/initializers ---------------------------------------------

    private static final transient Logger LOG = Logger.getLogger(WorkshopInputManagerUI.class);

    //~ Instance fields --------------------------------------------------------

    private final transient WorkshopInputManager model;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JEditorPane jepIntegers;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form WorkshopInputManagerUI.
     *
     * @param  model  DOCUMENT ME!
     */
    public WorkshopInputManagerUI(final WorkshopInputManager model) {
        this.model = model;

        initComponents();

        init();
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    int[] getIntegers() {
        final String[] integerStrings = jepIntegers.getText().split("\n");
        final int[] integers = new int[integerStrings.length];
        for (int i = 0; i < integers.length; ++i) {
            try {
                integers[i] = Integer.parseInt(integerStrings[i]);
            } catch (final NumberFormatException e) {
                JOptionPane.showMessageDialog(
                    this,
                    "Invalid line: "
                            + integerStrings[i],
                    "Invalid line",
                    JOptionPane.WARNING_MESSAGE);
                throw e;
            }
        }

        return integers;
    }

    /**
     * DOCUMENT ME!
     *
     * @throws  IllegalStateException  DOCUMENT ME!
     */
    private void init() {
        try {
            final WorkshopIO input = model.getUR();
            if (input != null) {
                final StringBuilder sb = new StringBuilder(""); // NOI18N
                for (final int i : input.getIntegers()) {
                    sb.append(i).append('\n');
                }

                jepIntegers.setText(sb.toString());
            }
        } catch (final Exception e) {
            final String message = "cannot initialise workshop input manager ui"; // NOI18N
            LOG.error(message, e);
            throw new IllegalStateException(message, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jepIntegers = new javax.swing.JEditorPane();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText(NbBundle.getMessage(WorkshopInputManagerUI.class, "WorkshopInputManagerUI.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel1, gridBagConstraints);

        jepIntegers.setMinimumSize(new java.awt.Dimension(50, 50));
        jepIntegers.setPreferredSize(new java.awt.Dimension(200, 200));
        jScrollPane1.setViewportView(jepIntegers);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 81;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jScrollPane1, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents
}
