/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.sudplan.airquality;

import org.openide.util.NbBundle;
import org.openide.util.WeakListeners;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public final class AirqualityDownscalingVisualPanelGridSize extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private final transient AirqualityDownscalingWizardPanelGridSize model;
    private final transient DocumentListener docL;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider jslGridSize;
    private javax.swing.JLabel lblGridSize;
    private javax.swing.JLabel lblMeters;
    private javax.swing.JPanel pnlFiller;
    private javax.swing.JTextField txtMeters;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form AirqualityDownscalingVisualPanelGridSize.
     *
     * @param  model  DOCUMENT ME!
     */
    public AirqualityDownscalingVisualPanelGridSize(final AirqualityDownscalingWizardPanelGridSize model) {
        this.model = model;
        this.docL = new DocumentListenerImpl();

        // name of the wizard step
        this.setName(NbBundle.getMessage(
                AirqualityDownscalingVisualPanelGridSize.class,
                "AirqualityDownscalingVisualPanelGridSize.this.name")); // NOI18N

        initComponents();

        txtMeters.getDocument().addDocumentListener(WeakListeners.document(docL, txtMeters.getDocument()));
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    String getSelectedGridSize() {
        return txtMeters.getText();
    }

    /**
     * DOCUMENT ME!
     */
    void init() {
        final Integer gridSize = model.getGridSize();

        if (gridSize == null) {
            // FIXME: atr hack initial value 2000 instead of 5000
            txtMeters.setText("2000"); // NOI18N
        } else {
            txtMeters.setText(gridSize.toString());
        }

        model.fireChangeEvent();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jslGridSize = new javax.swing.JSlider();
        lblGridSize = new javax.swing.JLabel();
        lblMeters = new javax.swing.JLabel();
        txtMeters = new javax.swing.JTextField();
        pnlFiller = new javax.swing.JPanel();

        setMinimumSize(new java.awt.Dimension(200, 150));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(450, 300));
        setLayout(new java.awt.GridBagLayout());

        jslGridSize.setMajorTickSpacing(1000);
        jslGridSize.setMaximum(10000);
        jslGridSize.setMinimum(1000);
        jslGridSize.setMinorTickSpacing(500);
        jslGridSize.setPaintLabels(true);
        jslGridSize.setPaintTicks(true);
        jslGridSize.setValue(5000);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(jslGridSize, gridBagConstraints);

        lblGridSize.setText(NbBundle.getMessage(
                AirqualityDownscalingVisualPanelGridSize.class,
                "AirqualityDownscalingVisualPanelGridSize.lblGridSize.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        add(lblGridSize, gridBagConstraints);

        lblMeters.setText(NbBundle.getMessage(
                AirqualityDownscalingVisualPanelGridSize.class,
                "AirqualityDownscalingVisualPanelGridSize.lblMeters.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 18);
        add(lblMeters, gridBagConstraints);

        txtMeters.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMeters.setPreferredSize(new java.awt.Dimension(60, 28));

        final org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                jslGridSize,
                org.jdesktop.beansbinding.ELProperty.create("${value}"),
                txtMeters,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 3);
        add(txtMeters, gridBagConstraints);

        pnlFiller.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(pnlFiller, gridBagConstraints);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class DocumentListenerImpl implements DocumentListener {

        //~ Methods ------------------------------------------------------------

        @Override
        public void changedUpdate(final DocumentEvent e) {
            model.fireChangeEvent();
        }

        @Override
        public void insertUpdate(final DocumentEvent e) {
            model.fireChangeEvent();
        }

        @Override
        public void removeUpdate(final DocumentEvent e) {
            model.fireChangeEvent();
        }
    }
}
