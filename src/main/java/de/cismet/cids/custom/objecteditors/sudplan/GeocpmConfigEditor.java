/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.objecteditors.sudplan;

import Sirius.navigator.connection.SessionManager;

import Sirius.server.middleware.types.MetaClass;

import org.apache.log4j.Logger;

import org.openide.util.NbBundle;

import java.util.List;

import de.cismet.cids.custom.sudplan.AbstractCidsBeanRenderer;
import de.cismet.cids.custom.sudplan.SMSUtils;

import de.cismet.cids.dynamics.CidsBean;

import de.cismet.cids.editors.EditorClosedEvent;
import de.cismet.cids.editors.EditorSaveListener;

import de.cismet.cids.navigator.utils.ClassCacheMultiple;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class GeocpmConfigEditor extends AbstractCidsBeanRenderer implements EditorSaveListener {

    //~ Static fields/initializers ---------------------------------------------

    private static final transient Logger LOG = Logger.getLogger(GeocpmConfigEditor.class);

    //~ Instance fields --------------------------------------------------------

    private transient CidsBean parentBean;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final transient javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
    private final transient javax.swing.JEditorPane jepGeocpmInput = new javax.swing.JEditorPane();
    private final transient javax.swing.JLabel lblName = new javax.swing.JLabel();
    private final transient javax.swing.JTextField txtName = new javax.swing.JTextField();
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form GeocpmConfigEditor.
     */
    public GeocpmConfigEditor() {
        this(true);
    }

    /**
     * Creates a new GeocpmConfigEditor object.
     *
     * @param  editable  DOCUMENT ME!
     */
    public GeocpmConfigEditor(final boolean editable) {
        initComponents();

        jepGeocpmInput.setEditable(editable);
        txtName.setEditable(editable);
    }

    //~ Methods ----------------------------------------------------------------

    @Override
    protected void init() {
        parentBean = SMSUtils.getParentObject();

        bindingGroup.unbind();
        bindingGroup.bind();
    }

    @Override
    public void dispose() {
        bindingGroup.unbind();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        jepGeocpmInput.setBorder(javax.swing.BorderFactory.createTitledBorder(
                NbBundle.getMessage(GeocpmConfigEditor.class, "GeocpmConfigEditor.jepGeoCPMInput.border.title"))); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.input}"),
                jepGeocpmInput,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(jepGeocpmInput);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jScrollPane1, gridBagConstraints);

        lblName.setText(NbBundle.getMessage(GeocpmConfigEditor.class, "GeocpmConfigEditor.lblName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 6, 5, 5);
        add(lblName, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${cidsBean.name}"),
                txtName,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 3);
        add(txtName, gridBagConstraints);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents

    @Override
    public void editorClosed(final EditorClosedEvent event) {
    }

    @Override
    public boolean prepareForSave() {
        if (parentBean == null) {
            LOG.warn("cannot fetch parent object for cidsbean: " + cidsBean); // NOI18N

            return false;
        } else {
            final MetaClass moClass = parentBean.getMetaObject().getMetaClass();
            final String domain = SessionManager.getSession().getUser().getDomain();

            final MetaClass iaClass = ClassCacheMultiple.getMetaClass(domain, "investigation_area"); // NOI18N

            if (moClass.equals(iaClass)) {
                final List<CidsBean> configs = (List)parentBean.getProperty("geocpm_configs"); // NOI18N
                configs.add(cidsBean);
                try {
                    parentBean.persist();

                    return true;
                } catch (final Exception ex) {
                    LOG.warn("cannot persist parent bean", ex); // NOI18N

                    return false;
                }
            } else {
                LOG.warn("cannot link config to investigation area"); // NOI18N

                return false;
            }
        }
    }
}
