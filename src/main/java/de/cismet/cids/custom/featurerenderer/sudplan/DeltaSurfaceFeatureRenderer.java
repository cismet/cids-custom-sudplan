/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.featurerenderer.sudplan;

import Sirius.navigator.exception.ConnectionException;

import Sirius.server.middleware.types.MetaObject;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Paint;

import java.math.BigDecimal;

import de.cismet.cids.custom.sudplan.SMSUtils;
import de.cismet.cids.custom.sudplan.Unit;
import de.cismet.cids.custom.tostringconverter.sudplan.DeltaConfigurationToStringConverter;

import de.cismet.cids.dynamics.CidsBean;

import de.cismet.cids.featurerenderer.CustomCidsFeatureRenderer;

import de.cismet.cismap.navigatorplugin.CidsFeature;

/**
 * DOCUMENT ME!
 *
 * @author   jlauter
 * @version  $Revision$, $Date$
 */
public class DeltaSurfaceFeatureRenderer extends CustomCidsFeatureRenderer {

    //~ Static fields/initializers ---------------------------------------------

    private static final DeltaConfigurationToStringConverter deltaConfigToString =
        new DeltaConfigurationToStringConverter();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblConfig;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblUnit;
    private javax.swing.JTextArea txaDescription;
    private javax.swing.JTextField txtConfig;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtType;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form DeltaSurfaceFeatureRenderer.
     */
    public DeltaSurfaceFeatureRenderer() {
        initComponents();
        lblUnit.setText(Unit.M.getLocalisedName());
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblHeight = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        lblType = new javax.swing.JLabel();
        txtType = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaDescription = new javax.swing.JTextArea();
        lblConfig = new javax.swing.JLabel();
        txtConfig = new javax.swing.JTextField();
        lblUnit = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        lblHeight.setText(org.openide.util.NbBundle.getMessage(
                DeltaSurfaceFeatureRenderer.class,
                "DeltaSurfaceFeatureRenderer.lblHeight.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblHeight, gridBagConstraints);

        txtHeight.setEditable(false);
        txtHeight.setText(org.openide.util.NbBundle.getMessage(
                DeltaSurfaceFeatureRenderer.class,
                "DeltaSurfaceFeatureRenderer.txtHeight.text")); // NOI18N
        txtHeight.setPreferredSize(new java.awt.Dimension(40, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtHeight, gridBagConstraints);

        lblType.setText(org.openide.util.NbBundle.getMessage(
                DeltaSurfaceFeatureRenderer.class,
                "DeltaSurfaceFeatureRenderer.lblType.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblType, gridBagConstraints);

        txtType.setEditable(false);
        txtType.setText(org.openide.util.NbBundle.getMessage(
                DeltaSurfaceFeatureRenderer.class,
                "DeltaSurfaceFeatureRenderer.txtType.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtType, gridBagConstraints);

        lblDescription.setText(org.openide.util.NbBundle.getMessage(
                DeltaSurfaceFeatureRenderer.class,
                "DeltaSurfaceFeatureRenderer.lblDescription.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblDescription, gridBagConstraints);

        txaDescription.setColumns(20);
        txaDescription.setEditable(false);
        txaDescription.setRows(5);
        jScrollPane1.setViewportView(txaDescription);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jScrollPane1, gridBagConstraints);

        lblConfig.setText(org.openide.util.NbBundle.getMessage(
                DeltaSurfaceFeatureRenderer.class,
                "DeltaSurfaceFeatureRenderer.lblConfig.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lblConfig, gridBagConstraints);

        txtConfig.setEditable(false);
        txtConfig.setText(org.openide.util.NbBundle.getMessage(
                DeltaSurfaceFeatureRenderer.class,
                "DeltaSurfaceFeatureRenderer.txtConfig.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtConfig, gridBagConstraints);

        lblUnit.setText(org.openide.util.NbBundle.getMessage(
                DeltaSurfaceFeatureRenderer.class,
                "DeltaSurfaceFeatureRenderer.lblUnit.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(lblUnit, gridBagConstraints);
    }                                                         // </editor-fold>//GEN-END:initComponents

    @Override
    public void assign() {
    }

    @Override
    public Paint getFillingStyle() {
        final BigDecimal height = (BigDecimal)cidsBean.getProperty("height");
        final float[] floats = new float[3];
        if (height.doubleValue() > 0) {
            Color.RGBtoHSB(120, 200, 250, floats);
            return Color.getHSBColor(floats[0], floats[1], floats[2]);
        } else if (height.doubleValue() < 0) {
//            Color.RGBtoHSB(255, 80, 100, floats);
            Color.RGBtoHSB(255, 0, 0, floats);
            return Color.getHSBColor(floats[0], floats[1], floats[2]);
        }
        final Graphics g = getGraphics();

        return null;
    }

    @Override
    public void setMetaObject(final MetaObject metaObject) throws ConnectionException {
        super.setMetaObject(metaObject);

        final Double height = ((BigDecimal)cidsBean.getProperty("height")).doubleValue();
        final Boolean type = (Boolean)cidsBean.getProperty("sea_type");
        final String desc = (String)cidsBean.getProperty("description");
        final CidsBean config = (CidsBean)cidsBean.getProperty("delta_configuration");

        txtHeight.setText(height.toString());
        txtType.setText(type.toString());
        txaDescription.setText(desc);
        txtConfig.setText(deltaConfigToString.convert(config.getMetaObject()));
    }

    @Override
    public Paint getLinePaint(final CidsFeature subFeature) {
        return getFillingStyle();
    }

    @Override
    public float getTransparency(final CidsFeature subFeature) {
        return 1f;
    }
}
